@charset "UTF-8";

////
/// BEM Mixins
/// @group tools
/// @since v1.0.0
////

// Taken from:
// https://m.alphasights.com/bem-i-finally-understand-b0c74815d5b0

$bem-element-separator: '__';
$bem-modifier-separator: '--';
$bem-pseudo-separator: ':';

@function _bem-selector-to-string($selector) {
  $selector: inspect($selector);
  $dot-index: str-index($selector, '.') + 1;
  $selector: str-slice($selector, $dot-index, -1);

  @return $selector;
}

@function _bem-selector-has-modifier($selector) {
  $selector: _bem-selector-to-string($selector);

  @if str-index($selector, $bem-modifier-separator) or str-index($selector, ':') {
    @return true;
  } @else {
    @return false;
  }
}

@function _bem-get-block-name($selector) {
  $selector: _bem-selector-to-string($selector);
  $modifier-separator: $bem-pseudo-separator;

  @if str-index($selector, $bem-modifier-separator) {
    $modifier-separator: $bem-modifier-separator;
  }

  $modifier-start: str-index($selector, $modifier-separator) - 1;

  @return str-slice($selector, 0, $modifier-start);
}

@mixin b($block) {
  .#{$block} {
    @content;
  }
}

@mixin e($elements) {
  $selector: &;

  @if _bem-selector-has-modifier($selector) {
    $block: _bem-get-block-name($selector);

    @at-root {
      @each $element in $elements {
        #{selector-parse(selector-nest(&, '.#{selector-append($block, $bem-element-separator, $element)}'))} {
          @content;
        }
      }
    }
  } @else {
    @at-root {
      @each $element in $elements {
        #{selector-append(&, $bem-element-separator, $element)} {
          @content;
        }
      }
    }
  }
}

@mixin m($modifier) {
  $class-name: #{&}--#{$modifier};

  @if str-index($modifier, $bem-pseudo-separator) == 1 {
    $class-name: #{&}#{$modifier};
  }

  @at-root #{$class-name} {
    @content;
  }
}
